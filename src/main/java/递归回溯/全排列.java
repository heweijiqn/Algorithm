/**
 * @author 何伟健
 * @version 1.0
 * @date 2024/5/20 23:10
 */


package 递归回溯;

/*
描述
在一个农场里，有n头牛，每头牛都有一个唯一的编号，编号是一个正整数。农场的主人想知道，所有牛的编号的全排列有多少种可能。
由于农场主人不善于计算，他希望你能帮他设计一个算法，不用循环和判断语句，计算出所有牛的编号的全排列的数量。
注意：由于结果可能很大，你只需要返回结果模1000000007的余数。

示例1
输入：3
返回值：6

示例2
输入：4
返回值：24

备注：
1 <= n <= 10^6
 */

public class 全排列 {
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     *
     * @param n int整型
     * @return int整型
     */
    public int factorial (int n) {
        // write code here
        if (n == 1) {
            return 1;
        } else {
            return (int)(((long)factorial(n - 1) * n) % 1000000007);
        }
    }
}
