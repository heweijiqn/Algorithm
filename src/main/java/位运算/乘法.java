/**
 * @author 何伟健
 * @version 1.0
 * @date 2024/5/20 23:21
 */


package 位运算;

/*
描述
在一个农场里，有n个牧场，每个牧场有a头牛。农场的主人想知道，所有牧场的牛的数量总和是多少。
由于农场主人不善于计算，他希望你能帮他设计一个算法，不用加减乘除，计算出所有牧场的牛的数量总和。
示例1
输入：3,5
返回值：15

示例2
输入：4,7
返回值：28

示例3
输入：0,1
返回值：0
复制
备注：
0 <= n,a <= 10000
 */

public class 乘法 {
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     *
     * @param n int整型
     * @param a int整型
     * @return int整型
     */
    public int multiply(int n, int a) {
        // 初始化结果为0
        int result = 0;

        // 对n的每一位进行检查
        for (int i = 0; i < 32; i++) {
            // 如果n的当前位为1，则将a加到结果中
            if ((n & 1) == 1) {
                result = add(result, a); // 调用自定义的加法函数
            }
            // 将n右移一位，相当于除以2
            n >>= 1;
            // 将a左移一位，相当于乘以2
            a <<= 1;
        }

        // 返回最终结果
        return result;
    }

    // 自定义的加法函数
    private int add(int x, int y) {
        // 当y不为0时，继续进行加法运算
        while (y != 0) {
            // 计算进位
            int carry = x & y;
            // 计算非进位部分
            x = x ^ y;
            // 将进位左移一位，用于下一轮运算
            y = carry << 1;
        }
        // 返回最终结果
        return x;
    }

}
